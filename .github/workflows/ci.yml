name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ created ]

jobs:
  build-test-deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        qt-version: [ '6.5.0' ]
        build-type: [ Debug, Release ]

    steps:
    # ===== SETUP =====
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}

    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update && sudo apt-get install -y build-essential lcov
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        fi

    # ===== BUILD & TEST =====
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DENABLE_TESTS=ON

    - name: Build project
      run: cmake --build build --config ${{ matrix.build-type }}

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure || (echo "Tests failed!"; exit 1)

    - name: Generate coverage (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        lcov --capture --directory build --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        genhtml coverage.info --output-directory coverage-report

    # ===== DEPLOYMENT =====
    - name: Package artifacts
      run: |
        mkdir -p package
        if [ "$RUNNER_OS" == "Linux" ]; then
          cp build/tictactoe package/
          tar -czvf tictactoe-linux.tar.gz package/
        elif [ "$RUNNER_OS" == "Windows" ]; then
          windeployqt build/Release/tictactoe.exe
          cp build/Release/tictactoe.exe package/
          7z a tictactoe-windows.zip package/*
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tictactoe-${{ matrix.os }}-${{ matrix.build-type }}
        path: |
          tictactoe-*.tar.gz
          tictactoe-*.zip
          coverage-report/**

    # ===== RELEASE =====
    - name: Create release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tictactoe-*.tar.gz
          tictactoe-*.zip
        draft: false

    # ===== CODE QUALITY =====
    - name: Run clang-format check
      run: |
        find src tests -name '*.h' -o -name '*.cpp' | xargs clang-format -i --style=file
        git diff --exit-code

    - name: SonarCloud analysis
      if: matrix.os == 'ubuntu-latest' && matrix.build-type == 'Debug'
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
